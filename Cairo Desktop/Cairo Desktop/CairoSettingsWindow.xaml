<?xml version="1.0" encoding="utf-8"?>
<Window x:Class="CairoDesktop.CairoSettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:Settings="clr-namespace:CairoDesktop.Configuration;assembly=CairoDesktop.Configuration"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:l10n="clr-namespace:CairoDesktop.Localization;assembly=CairoDesktop.Localization"
        xmlns:interop="clr-namespace:CairoDesktop.Interop;assembly=CairoDesktop.Interop"
        xmlns:validator="clr-namespace:CairoDesktop.SupportingClasses"
        Title="Settings"
        SizeToContent="WidthAndHeight"
        WindowStartupLocation="CenterScreen"
        Closing="Window_Closing"
        ResizeMode="NoResize"
        WindowStyle="SingleBorderWindow"
        SourceInitialized="Window_SourceInitialized">
    <Window.Resources>
        <interop:Shell x:Key="shellHelper" />
        <Style x:Key="CairoSettingsBarRestartStyle"
               TargetType="{x:Type TabItem}">
            <Setter Property="Foreground"
                    Value="#ffffff" />
            <Setter Property="FontFamily"
                    Value="Segoe UI" />
            <Setter Property="FontSize"
                    Value="10" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Border Name="Border"
                                    Grid.Row="1"
                                    Background="#ff8000"
                                    BorderBrush="{x:Null}"
                                    BorderThickness="0,0,0,0"
                                    Margin="0,5,5,5"
                                    CornerRadius="8">
                                <ContentPresenter x:Name="ContentSite"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Center"
                                                  ContentSource="Header"
                                                  Width="112"
                                                  Margin="5,6,5,6" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger SourceName="ContentSite"
                                     Property="IsMouseOver"
                                     Value="True">
                                <Setter TargetName="Border"
                                        Property="Background"
                                        Value="#ff973b" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SettingsTabControl"
               TargetType="{x:Type TabControl}">
            <Setter Property="OverridesDefaultStyle"
                    Value="True" />
            <Setter Property="UseLayoutRounding"
                    Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid KeyboardNavigation.TabNavigation="Local">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <TabPanel x:Name="HeaderPanel"
                                      Grid.Column="0"
                                      Panel.ZIndex="1"
                                      IsItemsHost="True"
                                      Margin="5,5,0,5"
                                      Background="#ff2e3034" />
                            <Border x:Name="Border"
                                    Grid.Column="1"
                                    BorderThickness="0"
                                    Background="#ff191a1e">
                                <ContentPresenter ContentSource="SelectedContent"
                                                  Margin="16,8" />
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SettingsTabItem"
               TargetType="{x:Type TabItem}">
            <Setter Property="HorizontalAlignment"
                    Value="Left" />
            <Setter Property="FontFamily"
                    Value="Tahoma" />
            <Setter Property="FontSize"
                    Value="12" />
            <Setter Property="Height"
                    Value="40" />
            <Setter Property="Width"
                    Value="130" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Border Name="Tab"
                                Background="Transparent"
                                CornerRadius="5,0,0,5">
                            <ContentPresenter x:Name="ContentSite"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left"
                                              ContentSource="Header"
                                              Margin="12,0" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger SourceName="Tab"
                                     Property="IsMouseOver"
                                     Value="True">
                                <Setter Property="Foreground"
                                        Value="#ffe9ecf4" />
                                <Setter TargetName="Tab"
                                        Property="Background"
                                        Value="#11ffffff" />
                            </Trigger>
                            <Trigger Property="IsSelected"
                                     Value="True">
                                <Setter Property="Foreground"
                                        Value="#ffe9ecf4" />
                                <Setter TargetName="Tab"
                                        Property="Background"
                                        Value="#ff191a1e" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected"
                                               Value="False" />
                                    <Condition SourceName="Tab"
                                               Property="IsMouseOver"
                                               Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Foreground"
                                        Value="#55FFFFFF" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RadioGroup"
               TargetType="{x:Type StackPanel}">
            <Setter Property="Margin"
                    Value="0,4" />
        </Style>
        <Style x:Key="SettingGroupHeader"
               TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground"
                    Value="#55ffffff" />
            <Setter Property="FontWeight"
                    Value="Bold" />
            <Setter Property="Margin"
                    Value="5,16,0,4" />
            <Setter Property="VerticalAlignment"
                    Value="Center" />
        </Style>
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="Margin"
                    Value="5,8" />
            <Setter Property="Padding"
                    Value="0" />
        </Style>
        <Style TargetType="{x:Type RadioButton}">
            <Setter Property="Margin"
                    Value="0,4" />
            <Setter Property="Padding"
                    Value="0" />
        </Style>
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground"
                    Value="#ffe9ecf4" />
            <Setter Property="Margin"
                    Value="5,4" />
            <Setter Property="VerticalAlignment"
                    Value="Center" />
            <Setter Property="MinWidth"
                    Value="100" />
        </Style>
        <Style TargetType="{x:Type Label}">
            <Setter Property="Foreground"
                    Value="#ffe9ecf4" />
            <Setter Property="Padding"
                    Value="0" />
        </Style>
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Foreground"
                    Value="#ffe9ecf4" />
            <Setter Property="Background"
                    Value="#ff111111" />
            <Setter Property="Margin"
                    Value="0,8" />
            <Setter Property="Padding"
                    Value="3" />
            <Setter Property="Width"
                    Value="200" />
            <Setter Property="Height"
                    Value="24" />
        </Style>
        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="Margin"
                    Value="0,8" />
            <Setter Property="Padding"
                    Value="3" />
            <Setter Property="Width"
                    Value="200" />
            <Setter Property="Height"
                    Value="23" />
        </Style>
        <Style TargetType="ItemsControl">
            <Setter Property="Width"
                    Value="160" />
            <Setter Property="AllowDrop"
                    Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ItemsControl">
                        <Border BorderThickness="1"
                                Background="Transparent">
                            <Border.BorderBrush>
                                <VisualBrush>
                                    <VisualBrush.Visual>
                                        <Rectangle StrokeDashArray="4 2"
                                                   Stroke="#55ffffff"
                                                   StrokeThickness="1"
                                                   Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualWidth}"
                                                   Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualHeight}"/>
                                    </VisualBrush.Visual>
                                </VisualBrush>
                            </Border.BorderBrush>
                            <ItemsPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <WrapPanel MinHeight="26" />
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Border Background="Transparent"
                                ToolTip="{Binding Path=Title}"
                                ToolTipService.Placement="Bottom"
                                DragOver="icon_DragOver"
                                Drop="icon_Drop"
                                PreviewMouseLeftButtonDown="icon_PreviewMouseLeftButtonDown"
                                PreviewMouseMove="icon_PreviewMouseMove">
                            <Image Source="{Binding Path=Icon, Mode=OneWay}"
                                   Width="16"
                                   Height="16"
                                   Margin="5" />
                        </Border>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Background="#ff2e3034">
        <TabControl TabStripPlacement="Left"
                    Style="{StaticResource SettingsTabControl}">
            <TabControl.Resources>
                <Style TargetType="TabItem"
                       BasedOn="{StaticResource SettingsTabItem}">
                </Style>
            </TabControl.Resources>

            <TabItem Header="General">
                <StackPanel Orientation="Vertical">
                    <CheckBox Click="chkRunAtLogOn_Click"
                              Name="chkRunAtLogOn">
                        <Label Content="Start Expiro when logging in" />
                    </CheckBox>
                    <TextBlock Text="Appearance"
                               Style="{StaticResource SettingGroupHeader}" />
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Language:" />
                        <ComboBox Name="cboLangSelect"
                                  DropDownClosed="DropDown_Changed"
                                  IsDropDownOpen="False"
                                  IsEditable="False"
                                  SelectedValue="{Binding Source={x:Static Settings:Settings.Instance}, Path=Language, UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Theme:"
                                   ToolTip="Place themes into your Expiro installation directory." />
                        <ComboBox Name="cboThemeSelect"
                                  IsDropDownOpen="False"
                                  IsEditable="False"
                                  SelectedValue="{Binding Source={x:Static Settings:Settings.Instance}, Path=CairoTheme, UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>
                    <TextBlock Text="Files and folders"
                               Style="{StaticResource SettingGroupHeader}" />
                    <CheckBox IsChecked="{Binding Source={x:Static Settings:Settings.Instance}, Path=FoldersOpenDesktopOverlay, UpdateSourceTrigger=PropertyChanged}"
                              Name="chkFoldersOpenDesktopOverlay">
                        <Label Content="Folders open using the dynamic desktop overlay" />
                    </CheckBox>
                </StackPanel>
            </TabItem>

            <TabItem Header="Menu Bar">
                <StackPanel Orientation="Vertical">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Default programs category:"
                                   MinWidth="160" />
                        <ComboBox Name="cboDefaultProgramsCategory"
                                  IsDropDownOpen="False"
                                  IsEditable="False"
                                  SelectedValue="{Binding Source={x:Static Settings:Settings.Instance}, Path=DefaultProgramsCategory, UpdateSourceTrigger=PropertyChanged}"
                                  Width="170" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <CheckBox IsChecked="{Binding Source={x:Static Settings:Settings.Instance}, Path=EnableCairoMenuHotKey, UpdateSourceTrigger=PropertyChanged}"
                                  Name="chkEnableCairoMenuHotKey">
                            <Label Content="Enable Expiro menu hotkey:" />
                        </CheckBox>
                        <ComboBox Name="cboCairoMenuHotKeyMod1"
                                  IsEnabled="{Binding IsChecked, ElementName=chkEnableCairoMenuHotKey}"
                                  IsDropDownOpen="False"
                                  IsEditable="False"
                                  Width="55"
                                  Margin="5,-1,0,0"
                                  SelectionChanged="cboCairoMenuHotKey_OnSelectionChanged"
                                  SelectedValue="{Binding Source={x:Static Settings:Settings.Instance}, Path=CairoMenuHotKey[0], UpdateSourceTrigger=PropertyChanged}" />
                        <ComboBox Name="cboCairoMenuHotKeyMod2"
                                  IsEnabled="{Binding IsChecked, ElementName=chkEnableCairoMenuHotKey}"
                                  IsDropDownOpen="False"
                                  IsEditable="False"
                                  Width="55"
                                  Margin="5,-1,0,0"
                                  SelectionChanged="cboCairoMenuHotKey_OnSelectionChanged"
                                  SelectedValue="{Binding Source={x:Static Settings:Settings.Instance}, Path=CairoMenuHotKey[1], UpdateSourceTrigger=PropertyChanged}" />
                        <ComboBox Name="cboCairoMenuHotKeyKey"
                                  IsEnabled="{Binding IsChecked, ElementName=chkEnableCairoMenuHotKey}"
                                  IsDropDownOpen="False"
                                  IsEditable="False"
                                  Width="40"
                                  Margin="5,-1,0,0"
                                  SelectionChanged="cboCairoMenuHotKey_OnSelectionChanged"
                                  SelectedValue="{Binding Source={x:Static Settings:Settings.Instance}, Path=CairoMenuHotKey[2], UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>
                    <CheckBox IsChecked="{Binding Source={x:Static Settings:Settings.Instance}, Path=ShowHibernate, UpdateSourceTrigger=PropertyChanged}"
                              Name="chkShowHibernate">
                        <Label Content="Show Hibernate option in Expiro menu" />
                    </CheckBox>
                    <TextBlock Text="Appearance"
                               Style="{StaticResource SettingGroupHeader}" />
                    <CheckBox IsChecked="{Binding Source={x:Static Settings:Settings.Instance}, Path=EnableMenuBarBlur, UpdateSourceTrigger=PropertyChanged}"
                              Name="chkEnableMenuBarBlur">
                        <Label Content="Blur behind the menu bar" />
                    </CheckBox>
                    <CheckBox IsChecked="{Binding Source={x:Static Settings:Settings.Instance}, Path=EnableMenuBarShadow, UpdateSourceTrigger=PropertyChanged}"
                              Name="chkEnableMenuBarShadow">
                        <Label Content="Enable menu bar shadow" />
                    </CheckBox>
                    <CheckBox IsChecked="{Binding Source={x:Static Settings:Settings.Instance}, Path=EnableMenuBarMultiMon, UpdateSourceTrigger=PropertyChanged}"
                              Click="CheckBox_Click"
                              Name="chkEnableMenuBarMultiMon">
                        <Label Content="Show menu bar on multiple monitors" />
                    </CheckBox>
                    <StackPanel Orientation="Horizontal"
                                Style="{StaticResource RadioGroup}">
                        <TextBlock Text="Programs menu layout:"
                                   MinWidth="165"
                                   VerticalAlignment="Top"
                                   Margin="5,3,5,4" />
                        <StackPanel Orientation="Vertical">
                            <RadioButton GroupName="rdoProgramsMenuLayout"
                                         Name="radProgramsMenuLayout0"
                                         Click="radProgramsMenuLayout0_Click">
                                <Label Content="Tabs on right" />
                            </RadioButton>
                            <RadioButton GroupName="rdoProgramsMenuLayout"
                                         Name="radProgramsMenuLayout1"
                                         Click="radProgramsMenuLayout1_Click">
                                <Label Content="Tabs on left" />
                            </RadioButton>
                        </StackPanel>
                    </StackPanel>
                    <TextBlock Text="Menu bar items"
                               Style="{StaticResource SettingGroupHeader}" />
                    <StackPanel Orientation="Horizontal">
                        <StackPanel Orientation="Vertical">
                            <CheckBox IsChecked="{Binding Source={x:Static Settings:Settings.Instance}, Path=EnableMenuExtraClock, UpdateSourceTrigger=PropertyChanged}"
                                      Click="CheckBox_Click"
                                      Name="chkEnableMenuExtraClock">
                                <Label Content="Clock" />
                            </CheckBox>
                            <CheckBox IsChecked="{Binding Source={x:Static Settings:Settings.Instance}, Path=EnableMenuExtraSearch, UpdateSourceTrigger=PropertyChanged}"
                                      Click="CheckBox_Click"
                                      Name="chkEnableMenuExtraSearch">
                                <Label Content="Search" />
                            </CheckBox>
                        </StackPanel>
                        <StackPanel Orientation="Vertical" Margin="10,0,0,0">
                            <CheckBox IsChecked="{Binding Source={x:Static Settings:Settings.Instance}, Path=EnableMenuExtraVolume, UpdateSourceTrigger=PropertyChanged}"
                                      Click="CheckBox_Click"
                                      Name="chkEnableMenuExtraVolume">
                                <Label Content="Volume" />
                            </CheckBox>
                            <CheckBox IsChecked="{Binding Source={x:Static Settings:Settings.Instance}, Path=EnableMenuExtraActionCenter, UpdateSourceTrigger=PropertyChanged}"
                                      Click="CheckBox_Click"
                                      Name="chkEnableMenuExtraActionCenter">
                                <Label Content="Action Center" />
                            </CheckBox>
                        </StackPanel>
                    </StackPanel>
                    <TextBlock Text="Notification area"
                               Style="{StaticResource SettingGroupHeader}" />
                    <CheckBox IsChecked="{Binding Source={x:Static Settings:Settings.Instance}, Path=EnableSysTray, UpdateSourceTrigger=PropertyChanged}"
                              Click="CheckBox_Click"
                              Name="chkEnableSysTray">
                        <Label Content="Enable notification area" />
                    </CheckBox>
                    <TextBlock Name="lblTrayTaskbarWarning"
                               Visibility="Collapsed"
                               Width="300"
                               TextWrapping="Wrap"
                               Text="The notification area will not be displayed due to the Windows taskbar being visible. To use the notification area, enable the Expiro taskbar and restart Expiro." />
                    <TextBlock Name="lblTrayWarning"
                               Visibility="Collapsed"
                               Width="300"
                               TextWrapping="Wrap"
                               Text="The notification area component could not be loaded. Please install the Microsoft Visual C++ 2015 Redistributable." />
                    <StackPanel Orientation="Vertical"
                                Name="pnlTraySettings">
                        <StackPanel Orientation="Horizontal"
                                    Style="{StaticResource RadioGroup}">
                            <TextBlock Text="Show notification area icons:"
                                       MinWidth="165"
                                       VerticalAlignment="Top"
                                       Margin="5,3,5,4" />
                            <StackPanel Orientation="Vertical">
                                <RadioButton GroupName="rdoTrayMode"
                                             Name="radTrayMode0"
                                             Click="radTrayMode0_Click">
                                    <Label Content="Collapsed" />
                                </RadioButton>
                                <RadioButton GroupName="rdoTrayMode"
                                             Name="radTrayMode1"
                                             Click="radTrayMode1_Click">
                                    <Label Content="Always" />
                                </RadioButton>
                            </StackPanel>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <StackPanel Orientation="Vertical">
                                <TextBlock Text="Collapsible icons:" />
                                <ItemsControl x:Name="UnpinnedIcons" DragOver="UnpinnedIcons_DragOver" Drop="UnpinnedIcons_Drop" />
                            </StackPanel>
                            <StackPanel Orientation="Vertical" Margin="16,0,0,0">
                                <TextBlock Text="Pinned icons:" />
                                <ItemsControl x:Name="PinnedIcons" DragOver="PinnedIcons_DragOver" Drop="PinnedIcons_Drop" />
                            </StackPanel>
                        </StackPanel>
                        <TextBlock Width="300"
                                   Foreground="#55ffffff"
                                   TextWrapping="Wrap"
                                   TextAlignment="Center"
                                   Text="To pin a notification area icon, drag it to the pinned icons area. To unpin an icon, drag it to the collapsible icons area." />
                    </StackPanel>
                </StackPanel>
            </TabItem>

            <TabItem Header="Desktop"
                     Name="TabDesktop">
                <StackPanel Orientation="Vertical">
                    <CheckBox IsChecked="{Binding Source={x:Static Settings:Settings.Instance}, Path=EnableDesktop, UpdateSourceTrigger=PropertyChanged}"
                              Name="chkEnableDesktop">
                        <Label Content="Enable desktop" />
                    </CheckBox>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Desktop home:" />
                        <TextBox Name="txtDesktopHome">
                            <TextBox.Text>
                                <Binding Path="DesktopDirectory"
                                         Source="{x:Static Settings:Settings.Instance}"
                                         UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <validator:DirectoryPathValidationRule RequireDirectoryExists="True" />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                        <Button Name="btnDesktopHomeSelect"
                                Click="btnDesktopHomeSelect_Click"
                                Height="24"
                                Padding="10,0">...</Button>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <CheckBox IsChecked="{Binding Source={x:Static Settings:Settings.Instance}, Path=EnableDesktopOverlayHotKey, UpdateSourceTrigger=PropertyChanged}"
                                  Name="chkEnableDesktopOverlayHotKey">
                            <Label Content="Enable dynamic desktop overlay hotkey:" />
                        </CheckBox>
                        <ComboBox Name="cboDesktopOverlayHotKeyMod1"
                                  IsEnabled="{Binding IsChecked, ElementName=chkEnableDesktopOverlayHotKey}"
                                  IsDropDownOpen="False"
                                  IsEditable="False"
                                  Width="55"
                                  Margin="5,-1,0,0"
                                  SelectionChanged="cboDesktopOverlayHotKey_OnSelectionChanged"
                                  SelectedValue="{Binding Source={x:Static Settings:Settings.Instance}, Path=DesktopOverlayHotKey[0], UpdateSourceTrigger=PropertyChanged}" />
                        <ComboBox Name="cboDesktopOverlayHotKeyMod2"
                                  IsEnabled="{Binding IsChecked, ElementName=chkEnableDesktopOverlayHotKey}"
                                  IsDropDownOpen="False"
                                  IsEditable="False"
                                  Width="55"
                                  Margin="5,-1,0,0"
                                  SelectionChanged="cboDesktopOverlayHotKey_OnSelectionChanged"
                                  SelectedValue="{Binding Source={x:Static Settings:Settings.Instance}, Path=DesktopOverlayHotKey[1], UpdateSourceTrigger=PropertyChanged}" />
                        <ComboBox Name="cboDesktopOverlayHotKeyKey"
                                  IsEnabled="{Binding IsChecked, ElementName=chkEnableDesktopOverlayHotKey}"
                                  IsDropDownOpen="False"
                                  IsEditable="False"
                                  Width="40"
                                  Margin="5,-1,0,0"
                                  SelectionChanged="cboDesktopOverlayHotKey_OnSelectionChanged"
                                  SelectedValue="{Binding Source={x:Static Settings:Settings.Instance}, Path=DesktopOverlayHotKey[2], UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>
                    <TextBlock Text="Appearance"
                               Style="{StaticResource SettingGroupHeader}" />
                    <StackPanel Orientation="Horizontal"
                                Style="{StaticResource RadioGroup}">
                        <TextBlock Text="Icon size:"
                                   VerticalAlignment="Top"
                                   Margin="5,3,5,4" />
                        <StackPanel Orientation="Vertical">
                            <RadioButton GroupName="rdoDesktopIconSize"
                                         Name="radDesktopIconSize2"
                                         Click="radDesktopIconSize2_Click">
                                <Label Content="Large" />
                            </RadioButton>
                            <RadioButton GroupName="rdoDesktopIconSize"
                                         Name="radDesktopIconSize0"
                                         Click="radDesktopIconSize0_Click">
                                <Label Content="Small" />
                            </RadioButton>
                        </StackPanel>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal"
                                Style="{StaticResource RadioGroup}">
                        <TextBlock Text="Label position:"
                                   VerticalAlignment="Top"
                                   Margin="5,3,5,4" />
                        <StackPanel Orientation="Vertical">
                            <RadioButton GroupName="rdoDesktopLabelPos"
                                         Name="radDesktopLabelPos0"
                                         Click="radDesktopLabelPos0_Click">
                                <Label Content="Right" />
                            </RadioButton>
                            <RadioButton GroupName="rdoDesktopLabelPos"
                                         Name="radDesktopLabelPos1"
                                         Click="radDesktopLabelPos1_Click">
                                <Label Content="Bottom" />
                            </RadioButton>
                        </StackPanel>
                    </StackPanel>
                    <TextBlock Text="Dynamic desktop"
                               Style="{StaticResource SettingGroupHeader}" />
                    <CheckBox IsChecked="{Binding Source={x:Static Settings:Settings.Instance}, Path=EnableDynamicDesktop, UpdateSourceTrigger=PropertyChanged}"
                              Name="chkEnableDynamicDesktop">
                        <Label Content="Show dynamic desktop navigation toolbar" />
                    </CheckBox>

                    <StackPanel Name="cairoBackgroundSettingsStackPanel"
                                Orientation="Vertical">
                        <TextBlock Text="Desktop background"
                                   Style="{StaticResource SettingGroupHeader}" />
                        <StackPanel Name="desktopBackgroundTypeStackPanel"
                                    Orientation="Horizontal">
                            <TextBlock Text="Background type:" />
                            <ComboBox Name="cboDesktopBackgroundType"
                                      IsEditable="False"
                                      SelectionChanged="cboDesktopBackgroundType_SelectionChanged">
                            </ComboBox>
                        </StackPanel>

                        <StackPanel Name="windowsImageBackgroundStackPanel"
                                    Orientation="Vertical"
                                    Visibility="Collapsed">
                            <StackPanel  Orientation="Horizontal">
                                <TextBlock Text="{Binding Path=(l10n:DisplayString.sSettings_Desktop_Background_Path)}" />
                                <TextBox Name="txtWindowsBackgroundPath"
                                         IsReadOnly="True" />
                                <Button Name="btnWindowsBackgroundFileBrowse"
                                        Height="24"
                                        Padding="10,0"
                                        Click="btnWindowsBackgroundFileBrowse_Click">...</Button>
                            </StackPanel>
                            <StackPanel  Orientation="Horizontal">
                                <TextBlock Text="{Binding Path=(l10n:DisplayString.sSettings_Desktop_Background_Style)}" />
                                <ComboBox Name="cboWindowsBackgroundStyle"
                                          IsEditable="False"
                                          SelectionChanged="cboWindowsBackgroundStyle_SelectionChanged">
                                </ComboBox>
                            </StackPanel>
                        </StackPanel>

                        <StackPanel Name="cairoImageBackgroundStackPanel"
                                    Orientation="Vertical"
                                    Visibility="Collapsed">
                            <StackPanel  Orientation="Horizontal">
                                <TextBlock Text="{Binding Path=(l10n:DisplayString.sSettings_Desktop_Background_Path)}" />
                                <TextBox Name="txtCairoBackgroundPath"
                                         IsReadOnly="True" />
                                <Button Name="btnCairoBackgroundFileBrowse"
                                        Height="24"
                                        Padding="10,0"
                                        Click="btnCairoBackgroundFileBrowse_Click">...</Button>
                            </StackPanel>
                            <StackPanel  Orientation="Horizontal">
                                <TextBlock Text="{Binding Path=(l10n:DisplayString.sSettings_Desktop_Background_Style)}" />
                                <ComboBox Name="cboCairoBackgroundStyle"
                                          IsEditable="False"
                                          SelectionChanged="cboCairoBackgroundStyle_SelectionChanged" />
                            </StackPanel>
                        </StackPanel>

                        <StackPanel Name="cairoVideoBackgroundStackPanel"
                                    Orientation="Vertical"
                                    Visibility="Collapsed">
                            <StackPanel  Orientation="Horizontal">
                                <TextBlock Text="{Binding Path=(l10n:DisplayString.sSettings_Desktop_Background_Path)}" />
                                <TextBox Name="txtCairoVideoBackgroundPath"
                                         IsReadOnly="True" />
                                <Button Name="btnCairoVideoBackgroundFileBrowse"
                                        Height="24"
                                        Padding="10,0"
                                        Click="btnCairoVideoFileBrowse_Click">...</Button>
                            </StackPanel>
                        </StackPanel>

                        <StackPanel Name="bingImageBackgroundStackPanel"
                                    Orientation="Vertical"
                                    Visibility="Collapsed">
                            <StackPanel  Orientation="Horizontal">
                                <TextBlock Text="{Binding Path=(l10n:DisplayString.sSettings_Desktop_Background_Style)}" />
                                <ComboBox Name="cboBingBackgroundStyle"
                                          IsEditable="False"
                                          SelectionChanged="cboBingBackgroundStyle_SelectionChanged" />
                            </StackPanel>
                        </StackPanel>

                    </StackPanel>

                </StackPanel>
            </TabItem>

            <TabItem Header="Taskbar">
                <StackPanel Orientation="Vertical">
                    <CheckBox IsChecked="{Binding Source={x:Static Settings:Settings.Instance}, Path=EnableTaskbar, UpdateSourceTrigger=PropertyChanged}"
                              Click="CheckBox_Click"
                              Name="chkEnableTaskbar">
                        <Label Content="Enable taskbar" />
                    </CheckBox>
                    <TextBlock Text="Appearance"
                               Style="{StaticResource SettingGroupHeader}" />
                    <StackPanel Orientation="Horizontal"
                                Style="{StaticResource RadioGroup}">
                        <TextBlock Text="Icon size:"
                                   VerticalAlignment="Top"
                                   Margin="5,3,5,4" />
                        <StackPanel Orientation="Vertical">
                            <RadioButton GroupName="rdoTaskbarSize"
                                         Name="radTaskbarSize1"
                                         Click="radTaskbarSize1_Click">
                                <Label Content="Small" />
                            </RadioButton>
                            <RadioButton GroupName="rdoTaskbarSize"
                                         Name="radTaskbarSize10"
                                         Click="radTaskbarSize10_Click">
                                <Label Content="Medium" />
                            </RadioButton>
                            <RadioButton GroupName="rdoTaskbarSize"
                                         Name="radTaskbarSize0"
                                         Click="radTaskbarSize0_Click">
                                <Label Content="Large" />
                            </RadioButton>
                        </StackPanel>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal"
                                Style="{StaticResource RadioGroup}">
                        <TextBlock Text="Taskbar position:"
                                   VerticalAlignment="Top"
                                   Margin="5,3,5,4" />
                        <StackPanel Orientation="Vertical">
                            <RadioButton GroupName="rdoTaskbarPos"
                                         Name="radTaskbarPos0"
                                         Click="radTaskbarPos0_Click">
                                <Label Content="Bottom" />
                            </RadioButton>
                            <RadioButton GroupName="rdoTaskbarPos"
                                         Name="radTaskbarPos1"
                                         Click="radTaskbarPos1_Click">
                                <Label Content="Top" />
                            </RadioButton>
                        </StackPanel>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal"
                                Style="{StaticResource RadioGroup}">
                        <TextBlock Text="Display mode:"
                                   VerticalAlignment="Top"
                                   Margin="5,3,5,4" />
                        <StackPanel Orientation="Vertical">
                            <RadioButton GroupName="rdoTaskbarMode"
                                         Name="radTaskbarMode0"
                                         Click="radTaskbarMode0_Click">
                                <Label Content="Taskbar reserves space" />
                            </RadioButton>
                            <RadioButton GroupName="rdoTaskbarMode"
                                         Name="radTaskbarMode1"
                                         Click="radTaskbarMode1_Click">
                                <Label Content="Taskbar overlaps windows" />
                            </RadioButton>
                            <RadioButton GroupName="rdoTaskbarMode"
                                         Name="radTaskbarMode2"
                                         Click="radTaskbarMode2_Click">
                                <Label Content="Taskbar automatically hides" />
                            </RadioButton>
                        </StackPanel>
                    </StackPanel>
                    <CheckBox IsChecked="{Binding Source={x:Static Settings:Settings.Instance}, Path=EnableTaskbarThumbnails, UpdateSourceTrigger=PropertyChanged}"
                              Name="chkEnableTaskbarThumbnails">
                        <Label Content="Show window thumbnails" />
                    </CheckBox>
                    <CheckBox IsChecked="{Binding Source={x:Static Settings:Settings.Instance}, Path=EnableTaskbarMultiMon, UpdateSourceTrigger=PropertyChanged}"
                              Click="CheckBox_Click"
                              Name="chkEnableTaskbarMultiMon">
                        <Label Content="Show taskbar on multiple monitors" />
                    </CheckBox>
                    <CheckBox IsChecked="{Binding Source={x:Static Settings:Settings.Instance}, Path=FullWidthTaskBar, UpdateSourceTrigger=PropertyChanged}"
                              Name="chkFullWidthTaskBar">
                        <Label Content="Use full display width for the taskbar" />
                    </CheckBox>
                    <TextBlock Text="Behavior"
                               Style="{StaticResource SettingGroupHeader}" />
                    <StackPanel Orientation="Horizontal"
                                Style="{StaticResource RadioGroup}">
                        <TextBlock Text="Middle-click action:"
                                   MinWidth="110"
                                   VerticalAlignment="Top"
                                   Margin="5,3,5,4" />
                        <StackPanel Orientation="Vertical">
                            <RadioButton GroupName="rdoTaskbarMiddleClick"
                                         Name="radTaskbarMiddleClick0"
                                         Click="radTaskbarMiddleClick0_Click">
                                <Label Content="Open new window" />
                            </RadioButton>
                            <RadioButton GroupName="rdoTaskbarMiddleClick"
                                         Name="radTaskbarMiddleClick1"
                                         Click="radTaskbarMiddleClick1_Click">
                                <Label Content="Close window" />
                            </RadioButton>
                        </StackPanel>
                    </StackPanel>
                </StackPanel>
            </TabItem>

            <TabItem Header="Advanced">
                <StackPanel Orientation="Vertical">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Logging level:" />
                        <ComboBox Name="cboLogSeverity"
                                  DropDownClosed="DropDown_Changed"
                                  IsDropDownOpen="False"
                                  IsEditable="False"
                                  Width="109"
                                  SelectedValue="{Binding Source={x:Static Settings:Settings.Instance}, Path=LogSeverity, UpdateSourceTrigger=PropertyChanged}" />
                        <Button Height="24"
                                Padding="10,0"
                                Margin="5,0,0,0"
                                HorizontalAlignment="Left"
                                Name="btnOpenLogsFolder"
                                Click="btnOpenLogsFolder_OnClick"
                                Content="Open folder" />
                    </StackPanel>
                    <TextBlock Text="Appearance"
                               Style="{StaticResource SettingGroupHeader}" />
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Time format:" />
                        <TextBox Name="timeSetting"
                                 ToolTip="{Binding Path=(l10n:DisplayString.sSettings_General_TimeFormatTooltip)}">
                            <TextBox.Text>
                                <Binding Path="TimeFormat"
                                         Source="{x:Static Settings:Settings.Instance}"
                                         UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <validator:DateTimeFormatValidationRule />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Date format:" />
                        <TextBox Name="dateSetting"
                                 ToolTip="{Binding Path=(l10n:DisplayString.sSettings_General_DateFormatTooltip)}">
                            <TextBox.Text>
                                <Binding Path="DateFormat"
                                         Source="{x:Static Settings:Settings.Instance}"
                                         UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <validator:DateTimeFormatValidationRule />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                    </StackPanel>
                    <CheckBox IsChecked="{Binding Source={x:Static Settings:Settings.Instance}, Path=ForceSoftwareRendering, UpdateSourceTrigger=PropertyChanged}"
                              Click="CheckBox_Click"
                              Name="chkForceSoftwareRendering">
                        <Label Content="Force software rendering" />
                    </CheckBox>
                    <TextBlock Text="Files and folders"
                               Style="{StaticResource SettingGroupHeader}" />
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="File manager:" />
                        <TextBox Name="fileManager">
                            <TextBox.Text>
                                <Binding Path="FileManager"
                                         Source="{x:Static Settings:Settings.Instance}"
                                         UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <validator:FilePathValidationRule RequireFileExists="True" />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                    </StackPanel>
                    <TextBlock Text="Shell"
                               Style="{StaticResource SettingGroupHeader}" />
                    <StackPanel Orientation="Vertical"
                                DataContext="{StaticResource shellHelper}">
                        <TextBlock>
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Foreground"
                                            Value="#ffe9ecf4" />
                                    <Setter Property="Margin"
                                            Value="5,4" />
                                    <Setter Property="VerticalAlignment"
                                            Value="Center" />
                                    <Setter Property="Text"
                                            Value="{Binding Path=(l10n:DisplayString.sSettings_Advanced_ExplorerIsShell)}" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsCairoConfiguredAsShell}"
                                                     Value="True">
                                            <Setter Property="Text"
                                                    Value="{Binding Path=(l10n:DisplayString.sSettings_Advanced_CairoIsShell)}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <Button Height="24"
                                Padding="10,0"
                                Margin="5,4"
                                HorizontalAlignment="Left"
                                Name="btnChangeShell"
                                Click="btnChangeShell_Click">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="Content"
                                            Value="{Binding Path=(l10n:DisplayString.sSettings_Advanced_SetCairoAsShell)}" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsCairoConfiguredAsShell}"
                                                     Value="True">
                                            <Setter Property="Content"
                                                    Value="{Binding Path=(l10n:DisplayString.sSettings_Advanced_SetExplorerAsShell)}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </StackPanel>
                </StackPanel>
            </TabItem>

            <TabItem Style="{StaticResource CairoSettingsBarRestartStyle}"
                     Name="btnRestart"
                     MouseLeftButtonUp="restartCairo"
                     Visibility="Hidden">
                <TabItem.Header>
                    <StackPanel>
                        <TextBlock TextAlignment="Center"
                                   TextWrapping="Wrap"
                                   Text="Restart Expiro to apply" />
                    </StackPanel>
                </TabItem.Header>
                <TextBlock Foreground="#55FFFFFF"
                           FontSize="14"
                           Text="Restarting..."
                           MinWidth="300"
                           TextAlignment="Center" />
            </TabItem>
        </TabControl>
    </Grid>
</Window>
